---
name: Build

on: [push, pull_request]

jobs:
  build-msvc:
    name: Build Windows
    runs-on: windows-latest
    env:
      JOM_PATH: C:\apps\JOM
    steps:
      - run: echo $env:JOM_PATH | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Install JOM
        shell: cmake -P {0}
        run: |
          file(MAKE_DIRECTORY $ENV{JOM_PATH})
          file(DOWNLOAD https://vps.anotherfoxguy.com/ipfs/QmQEMVbNzZzbU4qsbTQo4tgAKLfeJGURXypFQaNnru9Fm5 "$ENV{TMP}/JOM.zip" SHOW_PROGRESS)
          execute_process(COMMAND ${CMAKE_COMMAND} -E tar xzf "$ENV{TMP}/JOM.zip" WORKING_DIRECTORY "$ENV{JOM_PATH}")

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Build
        run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            mkdir build
            cd build
            cmake -G"NMake Makefiles JOM" ..
            jom
        shell: cmd

  build-gcc:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          cached: ${{ steps.cache-qt.outputs.cache-hit }}

      - name: Build
        run: |
            mkdir build
            cd build
            cmake -DCMAKE_BUILD_TYPE=Release ..
            make -j8
        shell: bash